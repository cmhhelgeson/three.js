/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
import{TSL as e}from"three/webgpu";const r=e.BRDF_GGX,t=e.BRDF_Lambert,a=e.BasicShadowFilter,o=e.Break,i=e.Continue,n=e.DFGApprox,s=e.D_GGX,l=e.Discard,c=e.EPSILON,m=e.F_Schlick,p=e.Fn,d=e.INFINITY,u=e.If,g=e.Loop,h=e.NodeShaderStage,f=e.NodeType,x=e.NodeUpdateType,b=e.NodeAccess,w=e.PCFShadowFilter,v=e.PCFSoftShadowFilter,S=e.PI,T=e.PI2,_=e.Return,V=e.Schlick_to_F0,y=e.ScriptableNodeResources,D=e.ShaderNode,M=e.TBNViewMatrix,F=e.VSMShadowFilter,C=e.V_GGX_SmithCorrelated,I=e.abs,N=e.acesFilmicToneMapping,P=e.acos,R=e.add,B=e.addNodeElement,L=e.agxToneMapping,k=e.all,A=e.alphaT,G=e.and,O=e.anisotropy,W=e.anisotropyB,j=e.anisotropyT,U=e.any,z=e.append,q=e.array,E=e.arrayBuffer,Z=e.asin,X=e.assign,Y=e.atan,H=e.atan2,J=e.atomicAdd,K=e.atomicAnd,Q=e.atomicFunc,$=e.atomicMax,ee=e.atomicMin,re=e.atomicOr,te=e.atomicStore,ae=e.atomicSub,oe=e.atomicXor,ie=e.atomicLoad,ne=e.attenuationColor,se=e.attenuationDistance,le=e.attribute,ce=e.attributeArray,me=e.backgroundBlurriness,pe=e.backgroundIntensity,de=e.backgroundRotation,ue=e.batch,ge=e.billboarding,he=e.bitAnd,fe=e.bitNot,xe=e.bitOr,be=e.bitXor,we=e.bitangentGeometry,ve=e.bitangentLocal,Se=e.bitangentView,Te=e.bitangentWorld,_e=e.bitcast,Ve=e.blendBurn,ye=e.blendColor,De=e.blendDodge,Me=e.blendOverlay,Fe=e.blendScreen,Ce=e.blur,Ie=e.bool,Ne=e.buffer,Pe=e.bufferAttribute,Re=e.bumpMap,Be=e.burn,Le=e.bvec2,ke=e.bvec3,Ae=e.bvec4,Ge=e.bypass,Oe=e.cache,We=e.call,je=e.cameraFar,Ue=e.cameraIndex,ze=e.cameraNear,qe=e.cameraNormalMatrix,Ee=e.cameraPosition,Ze=e.cameraProjectionMatrix,Xe=e.cameraProjectionMatrixInverse,Ye=e.cameraViewMatrix,He=e.cameraWorldMatrix,Je=e.cbrt,Ke=e.cdl,Qe=e.ceil,$e=e.checker,er=e.cineonToneMapping,rr=e.clamp,tr=e.clearcoat,ar=e.clearcoatRoughness,or=e.code,ir=e.color,nr=e.colorSpaceToWorking,sr=e.colorToDirection,lr=e.compute,cr=e.cond,mr=e.Const,pr=e.context,dr=e.convert,ur=e.convertColorSpace,gr=e.convertToTexture,hr=e.cos,fr=e.cross,xr=e.cubeTexture,br=e.dFdx,wr=e.dFdy,vr=e.dashSize,Sr=e.defaultBuildStages,Tr=e.defaultShaderStages,_r=e.defined,Vr=e.degrees,yr=e.deltaTime,Dr=e.densityFog,Mr=e.densityFogFactor,Fr=e.depth,Cr=e.depthPass,Ir=e.difference,Nr=e.diffuseColor,Pr=e.directPointLight,Rr=e.directionToColor,Br=e.dispersion,Lr=e.distance,kr=e.div,Ar=e.dodge,Gr=e.dot,Or=e.drawIndex,Wr=e.dynamicBufferAttribute,jr=e.element,Ur=e.emissive,zr=e.equal,qr=e.equals,Er=e.equirectUV,Zr=e.exp,Xr=e.exp2,Yr=e.expression,Hr=e.faceDirection,Jr=e.faceForward,Kr=e.faceforward,Qr=e.float,$r=e.floor,et=e.fog,rt=e.fract,tt=e.frameGroup,at=e.frameId,ot=e.frontFacing,it=e.fwidth,nt=e.gain,st=e.gapSize,lt=e.getConstNodeType,ct=e.getCurrentStack,mt=e.getDirection,pt=e.getDistanceAttenuation,dt=e.getGeometryRoughness,ut=e.getNormalFromDepth,gt=e.getParallaxCorrectNormal,ht=e.getRoughness,ft=e.getScreenPosition,xt=e.getShIrradianceAt,bt=e.getTextureIndex,wt=e.getViewPosition,vt=e.glsl,St=e.glslFn,Tt=e.grayscale,_t=e.greaterThan,Vt=e.greaterThanEqual,yt=e.hash,Dt=e.highpModelNormalViewMatrix,Mt=e.highpModelViewMatrix,Ft=e.hue,Ct=e.instance,It=e.instanceIndex,Nt=e.instancedArray,Pt=e.instancedBufferAttribute,Rt=e.instancedDynamicBufferAttribute,Bt=e.instancedMesh,Lt=e.int,kt=e.inverseSqrt,At=e.inversesqrt,Gt=e.invocationLocalIndex,Ot=e.invocationSubgroupIndex,Wt=e.ior,jt=e.iridescence,Ut=e.iridescenceIOR,zt=e.iridescenceThickness,qt=e.ivec2,Et=e.ivec3,Zt=e.ivec4,Xt=e.js,Yt=e.label,Ht=e.length,Jt=e.lengthSq,Kt=e.lessThan,Qt=e.lessThanEqual,$t=e.lightPosition,ea=e.lightTargetDirection,ra=e.lightTargetPosition,ta=e.lightViewPosition,aa=e.lightingContext,oa=e.lights,ia=e.linearDepth,na=e.linearToneMapping,sa=e.localId,la=e.globalId,ca=e.log,ma=e.log2,pa=e.logarithmicDepthToViewZ,da=e.loop,ua=e.luminance,ga=e.mediumpModelViewMatrix,ha=e.mat2,fa=e.mat3,xa=e.mat4,ba=e.matcapUV,wa=e.materialAO,va=e.materialAlphaTest,Sa=e.materialAnisotropy,Ta=e.materialAnisotropyVector,_a=e.materialAttenuationColor,Va=e.materialAttenuationDistance,ya=e.materialClearcoat,Da=e.materialClearcoatNormal,Ma=e.materialClearcoatRoughness,Fa=e.materialColor,Ca=e.materialDispersion,Ia=e.materialEmissive,Na=e.materialIOR,Pa=e.materialIridescence,Ra=e.materialIridescenceIOR,Ba=e.materialIridescenceThickness,La=e.materialLightMap,ka=e.materialLineDashOffset,Aa=e.materialLineDashSize,Ga=e.materialLineGapSize,Oa=e.materialLineScale,Wa=e.materialLineWidth,ja=e.materialMetalness,Ua=e.materialNormal,za=e.materialOpacity,qa=e.materialPointSize,Ea=e.materialReference,Za=e.materialReflectivity,Xa=e.materialRefractionRatio,Ya=e.materialRotation,Ha=e.materialRoughness,Ja=e.materialSheen,Ka=e.materialSheenRoughness,Qa=e.materialShininess,$a=e.materialSpecular,eo=e.materialSpecularColor,ro=e.materialSpecularIntensity,to=e.materialSpecularStrength,ao=e.materialThickness,oo=e.materialTransmission,io=e.max,no=e.maxMipLevel,so=e.metalness,lo=e.min,co=e.mix,mo=e.mixElement,po=e.mod,uo=e.modInt,go=e.modelDirection,ho=e.modelNormalMatrix,fo=e.modelPosition,xo=e.modelScale,bo=e.modelViewMatrix,wo=e.modelViewPosition,vo=e.modelViewProjection,So=e.modelWorldMatrix,To=e.modelWorldMatrixInverse,_o=e.morphReference,Vo=e.mrt,yo=e.mul,Do=e.mx_aastep,Mo=e.mx_cell_noise_float,Fo=e.mx_contrast,Co=e.mx_fractal_noise_float,Io=e.mx_fractal_noise_vec2,No=e.mx_fractal_noise_vec3,Po=e.mx_fractal_noise_vec4,Ro=e.mx_hsvtorgb,Bo=e.mx_noise_float,Lo=e.mx_noise_vec3,ko=e.mx_noise_vec4,Ao=e.mx_ramplr,Go=e.mx_ramptb,Oo=e.mx_rgbtohsv,Wo=e.mx_safepower,jo=e.mx_splitlr,Uo=e.mx_splittb,zo=e.mx_srgb_texture_to_lin_rec709,qo=e.mx_transform_uv,Eo=e.mx_worley_noise_float,Zo=e.mx_worley_noise_vec2,Xo=e.mx_worley_noise_vec3,Yo=e.negate,Ho=e.neutralToneMapping,Jo=e.nodeArray,Ko=e.nodeImmutable,Qo=e.nodeObject,$o=e.nodeObjects,ei=e.nodeProxy,ri=e.normalFlat,ti=e.normalGeometry,ai=e.normalLocal,oi=e.normalMap,ii=e.normalView,ni=e.normalWorld,si=e.normalize,li=e.not,ci=e.notEqual,mi=e.numWorkgroups,pi=e.objectDirection,di=e.objectGroup,ui=e.objectPosition,gi=e.objectScale,hi=e.objectViewPosition,fi=e.objectWorldMatrix,xi=e.oneMinus,bi=e.or,wi=e.orthographicDepthToViewZ,vi=e.oscSawtooth,Si=e.oscSine,Ti=e.oscSquare,_i=e.oscTriangle,Vi=e.output,yi=e.outputStruct,Di=e.overlay,Mi=e.overloadingFn,Fi=e.parabola,Ci=e.parallaxDirection,Ii=e.parallaxUV,Ni=e.parameter,Pi=e.pass,Ri=e.passTexture,Bi=e.pcurve,Li=e.perspectiveDepthToViewZ,ki=e.pmremTexture,Ai=e.pointUV,Gi=e.pointWidth,Oi=e.positionGeometry,Wi=e.positionLocal,ji=e.positionPrevious,Ui=e.positionView,zi=e.positionViewDirection,qi=e.positionWorld,Ei=e.positionWorldDirection,Zi=e.posterize,Xi=e.pow,Yi=e.pow2,Hi=e.pow3,Ji=e.pow4,Ki=e.property,Qi=e.radians,$i=e.rand,en=e.range,rn=e.rangeFog,tn=e.rangeFogFactor,an=e.reciprocal,on=e.reference,nn=e.referenceBuffer,sn=e.reflect,ln=e.reflectVector,cn=e.reflectView,mn=e.reflector,pn=e.refract,dn=e.refractVector,un=e.refractView,gn=e.reinhardToneMapping,hn=e.remainder,fn=e.remap,xn=e.remapClamp,bn=e.renderGroup,wn=e.renderOutput,vn=e.rendererReference,Sn=e.rotate,Tn=e.rotateUV,_n=e.roughness,Vn=e.round,yn=e.rtt,Dn=e.sRGBTransferEOTF,Mn=e.sRGBTransferOETF,Fn=e.sampler,Cn=e.saturate,In=e.saturation,Nn=e.screen,Pn=e.screenCoordinate,Rn=e.screenSize,Bn=e.screenUV,Ln=e.scriptable,kn=e.scriptableValue,An=e.select,Gn=e.setCurrentStack,On=e.shaderStages,Wn=e.shadow,jn=e.shadowPositionWorld,Un=e.sharedUniformGroup,zn=e.shapeCircle,qn=e.sheen,En=e.sheenRoughness,Zn=e.shiftLeft,Xn=e.shiftRight,Yn=e.shininess,Hn=e.sign,Jn=e.sin,Kn=e.sinc,Qn=e.skinning,$n=e.skinningReference,es=e.smoothstep,rs=e.smoothstepElement,ts=e.specularColor,as=e.specularF90,os=e.spherizeUV,is=e.split,ns=e.spritesheetUV,ss=e.sqrt,ls=e.stack,cs=e.step,ms=e.storage,ps=e.storageBarrier,ds=e.storageObject,us=e.storageTexture,gs=e.string,hs=e.struct,fs=e.sub,xs=e.subgroupIndex,bs=e.subgroupSize,ws=e.tan,vs=e.tangentGeometry,Ss=e.tangentLocal,Ts=e.tangentView,_s=e.tangentWorld,Vs=e.temp,ys=e.texture,Ds=e.texture3D,Ms=e.textureBarrier,Fs=e.textureBicubic,Cs=e.textureCubeUV,Is=e.textureLoad,Ns=e.textureSize,Ps=e.textureStore,Rs=e.thickness,Bs=e.threshold,Ls=e.time,ks=e.timerDelta,As=e.timerGlobal,Gs=e.timerLocal,Os=e.toOutputColorSpace,Ws=e.toWorkingColorSpace,js=e.toneMapping,Us=e.toneMappingExposure,zs=e.toonOutlinePass,qs=e.transformDirection,Es=e.transformNormal,Zs=e.transformNormalToView,Xs=e.transformedBentNormalView,Ys=e.transformedBitangentView,Hs=e.transformedBitangentWorld,Js=e.transformedClearcoatNormalView,Ks=e.transformedNormalView,Qs=e.transformedNormalWorld,$s=e.transformedTangentView,el=e.transformedTangentWorld,rl=e.transmission,tl=e.transpose,al=e.tri,ol=e.tri3,il=e.triNoise3D,nl=e.triplanarTexture,sl=e.triplanarTextures,ll=e.trunc,cl=e.tslFn,ml=e.uint,pl=e.uniform,dl=e.uniformArray,ul=e.uniformGroup,gl=e.uniforms,hl=e.userData,fl=e.uv,xl=e.uvec2,bl=e.uvec3,wl=e.uvec4,vl=e.Var,Sl=e.varying,Tl=e.varyingProperty,_l=e.vec2,Vl=e.vec3,yl=e.vec4,Dl=e.vectorComponents,Ml=e.velocity,Fl=e.vertexColor,Cl=e.vertexIndex,Il=e.vibrance,Nl=e.viewZToLogarithmicDepth,Pl=e.viewZToOrthographicDepth,Rl=e.viewZToPerspectiveDepth,Bl=e.viewport,Ll=e.viewportBottomLeft,kl=e.viewportCoordinate,Al=e.viewportDepthTexture,Gl=e.viewportLinearDepth,Ol=e.viewportMipTexture,Wl=e.viewportResolution,jl=e.viewportSafeUV,Ul=e.viewportSharedTexture,zl=e.viewportSize,ql=e.viewportTexture,El=e.viewportTopLeft,Zl=e.viewportUV,Xl=e.wgsl,Yl=e.wgslFn,Hl=e.workgroupArray,Jl=e.workgroupBarrier,Kl=e.workgroupId,Ql=e.workingToColorSpace,$l=e.xor;export{r as BRDF_GGX,t as BRDF_Lambert,a as BasicShadowFilter,o as Break,mr as Const,i as Continue,n as DFGApprox,s as D_GGX,l as Discard,c as EPSILON,m as F_Schlick,p as Fn,d as INFINITY,u as If,g as Loop,b as NodeAccess,h as NodeShaderStage,f as NodeType,x as NodeUpdateType,w as PCFShadowFilter,v as PCFSoftShadowFilter,S as PI,T as PI2,_ as Return,V as Schlick_to_F0,y as ScriptableNodeResources,D as ShaderNode,M as TBNViewMatrix,F as VSMShadowFilter,C as V_GGX_SmithCorrelated,vl as Var,I as abs,N as acesFilmicToneMapping,P as acos,R as add,B as addNodeElement,L as agxToneMapping,k as all,A as alphaT,G as and,O as anisotropy,W as anisotropyB,j as anisotropyT,U as any,z as append,q as array,E as arrayBuffer,Z as asin,X as assign,Y as atan,H as atan2,J as atomicAdd,K as atomicAnd,Q as atomicFunc,ie as atomicLoad,$ as atomicMax,ee as atomicMin,re as atomicOr,te as atomicStore,ae as atomicSub,oe as atomicXor,ne as attenuationColor,se as attenuationDistance,le as attribute,ce as attributeArray,me as backgroundBlurriness,pe as backgroundIntensity,de as backgroundRotation,ue as batch,ge as billboarding,he as bitAnd,fe as bitNot,xe as bitOr,be as bitXor,we as bitangentGeometry,ve as bitangentLocal,Se as bitangentView,Te as bitangentWorld,_e as bitcast,Ve as blendBurn,ye as blendColor,De as blendDodge,Me as blendOverlay,Fe as blendScreen,Ce as blur,Ie as bool,Ne as buffer,Pe as bufferAttribute,Re as bumpMap,Be as burn,Le as bvec2,ke as bvec3,Ae as bvec4,Ge as bypass,Oe as cache,We as call,je as cameraFar,Ue as cameraIndex,ze as cameraNear,qe as cameraNormalMatrix,Ee as cameraPosition,Ze as cameraProjectionMatrix,Xe as cameraProjectionMatrixInverse,Ye as cameraViewMatrix,He as cameraWorldMatrix,Je as cbrt,Ke as cdl,Qe as ceil,$e as checker,er as cineonToneMapping,rr as clamp,tr as clearcoat,ar as clearcoatRoughness,or as code,ir as color,nr as colorSpaceToWorking,sr as colorToDirection,lr as compute,cr as cond,pr as context,dr as convert,ur as convertColorSpace,gr as convertToTexture,hr as cos,fr as cross,xr as cubeTexture,br as dFdx,wr as dFdy,vr as dashSize,Sr as defaultBuildStages,Tr as defaultShaderStages,_r as defined,Vr as degrees,yr as deltaTime,Dr as densityFog,Mr as densityFogFactor,Fr as depth,Cr as depthPass,Ir as difference,Nr as diffuseColor,Pr as directPointLight,Rr as directionToColor,Br as dispersion,Lr as distance,kr as div,Ar as dodge,Gr as dot,Or as drawIndex,Wr as dynamicBufferAttribute,jr as element,Ur as emissive,zr as equal,qr as equals,Er as equirectUV,Zr as exp,Xr as exp2,Yr as expression,Hr as faceDirection,Jr as faceForward,Kr as faceforward,Qr as float,$r as floor,et as fog,rt as fract,tt as frameGroup,at as frameId,ot as frontFacing,it as fwidth,nt as gain,st as gapSize,lt as getConstNodeType,ct as getCurrentStack,mt as getDirection,pt as getDistanceAttenuation,dt as getGeometryRoughness,ut as getNormalFromDepth,gt as getParallaxCorrectNormal,ht as getRoughness,ft as getScreenPosition,xt as getShIrradianceAt,bt as getTextureIndex,wt as getViewPosition,la as globalId,vt as glsl,St as glslFn,Tt as grayscale,_t as greaterThan,Vt as greaterThanEqual,yt as hash,Dt as highpModelNormalViewMatrix,Mt as highpModelViewMatrix,Ft as hue,Ct as instance,It as instanceIndex,Nt as instancedArray,Pt as instancedBufferAttribute,Rt as instancedDynamicBufferAttribute,Bt as instancedMesh,Lt as int,kt as inverseSqrt,At as inversesqrt,Gt as invocationLocalIndex,Ot as invocationSubgroupIndex,Wt as ior,jt as iridescence,Ut as iridescenceIOR,zt as iridescenceThickness,qt as ivec2,Et as ivec3,Zt as ivec4,Xt as js,Yt as label,Ht as length,Jt as lengthSq,Kt as lessThan,Qt as lessThanEqual,$t as lightPosition,ea as lightTargetDirection,ra as lightTargetPosition,ta as lightViewPosition,aa as lightingContext,oa as lights,ia as linearDepth,na as linearToneMapping,sa as localId,ca as log,ma as log2,pa as logarithmicDepthToViewZ,da as loop,ua as luminance,ha as mat2,fa as mat3,xa as mat4,ba as matcapUV,wa as materialAO,va as materialAlphaTest,Sa as materialAnisotropy,Ta as materialAnisotropyVector,_a as materialAttenuationColor,Va as materialAttenuationDistance,ya as materialClearcoat,Da as materialClearcoatNormal,Ma as materialClearcoatRoughness,Fa as materialColor,Ca as materialDispersion,Ia as materialEmissive,Na as materialIOR,Pa as materialIridescence,Ra as materialIridescenceIOR,Ba as materialIridescenceThickness,La as materialLightMap,ka as materialLineDashOffset,Aa as materialLineDashSize,Ga as materialLineGapSize,Oa as materialLineScale,Wa as materialLineWidth,ja as materialMetalness,Ua as materialNormal,za as materialOpacity,qa as materialPointSize,Ea as materialReference,Za as materialReflectivity,Xa as materialRefractionRatio,Ya as materialRotation,Ha as materialRoughness,Ja as materialSheen,Ka as materialSheenRoughness,Qa as materialShininess,$a as materialSpecular,eo as materialSpecularColor,ro as materialSpecularIntensity,to as materialSpecularStrength,ao as materialThickness,oo as materialTransmission,io as max,no as maxMipLevel,ga as mediumpModelViewMatrix,so as metalness,lo as min,co as mix,mo as mixElement,po as mod,uo as modInt,go as modelDirection,ho as modelNormalMatrix,fo as modelPosition,xo as modelScale,bo as modelViewMatrix,wo as modelViewPosition,vo as modelViewProjection,So as modelWorldMatrix,To as modelWorldMatrixInverse,_o as morphReference,Vo as mrt,yo as mul,Do as mx_aastep,Mo as mx_cell_noise_float,Fo as mx_contrast,Co as mx_fractal_noise_float,Io as mx_fractal_noise_vec2,No as mx_fractal_noise_vec3,Po as mx_fractal_noise_vec4,Ro as mx_hsvtorgb,Bo as mx_noise_float,Lo as mx_noise_vec3,ko as mx_noise_vec4,Ao as mx_ramplr,Go as mx_ramptb,Oo as mx_rgbtohsv,Wo as mx_safepower,jo as mx_splitlr,Uo as mx_splittb,zo as mx_srgb_texture_to_lin_rec709,qo as mx_transform_uv,Eo as mx_worley_noise_float,Zo as mx_worley_noise_vec2,Xo as mx_worley_noise_vec3,Yo as negate,Ho as neutralToneMapping,Jo as nodeArray,Ko as nodeImmutable,Qo as nodeObject,$o as nodeObjects,ei as nodeProxy,ri as normalFlat,ti as normalGeometry,ai as normalLocal,oi as normalMap,ii as normalView,ni as normalWorld,si as normalize,li as not,ci as notEqual,mi as numWorkgroups,pi as objectDirection,di as objectGroup,ui as objectPosition,gi as objectScale,hi as objectViewPosition,fi as objectWorldMatrix,xi as oneMinus,bi as or,wi as orthographicDepthToViewZ,vi as oscSawtooth,Si as oscSine,Ti as oscSquare,_i as oscTriangle,Vi as output,yi as outputStruct,Di as overlay,Mi as overloadingFn,Fi as parabola,Ci as parallaxDirection,Ii as parallaxUV,Ni as parameter,Pi as pass,Ri as passTexture,Bi as pcurve,Li as perspectiveDepthToViewZ,ki as pmremTexture,Ai as pointUV,Gi as pointWidth,Oi as positionGeometry,Wi as positionLocal,ji as positionPrevious,Ui as positionView,zi as positionViewDirection,qi as positionWorld,Ei as positionWorldDirection,Zi as posterize,Xi as pow,Yi as pow2,Hi as pow3,Ji as pow4,Ki as property,Qi as radians,$i as rand,en as range,rn as rangeFog,tn as rangeFogFactor,an as reciprocal,on as reference,nn as referenceBuffer,sn as reflect,ln as reflectVector,cn as reflectView,mn as reflector,pn as refract,dn as refractVector,un as refractView,gn as reinhardToneMapping,hn as remainder,fn as remap,xn as remapClamp,bn as renderGroup,wn as renderOutput,vn as rendererReference,Sn as rotate,Tn as rotateUV,_n as roughness,Vn as round,yn as rtt,Dn as sRGBTransferEOTF,Mn as sRGBTransferOETF,Fn as sampler,Cn as saturate,In as saturation,Nn as screen,Pn as screenCoordinate,Rn as screenSize,Bn as screenUV,Ln as scriptable,kn as scriptableValue,An as select,Gn as setCurrentStack,On as shaderStages,Wn as shadow,jn as shadowPositionWorld,zn as shapeCircle,Un as sharedUniformGroup,qn as sheen,En as sheenRoughness,Zn as shiftLeft,Xn as shiftRight,Yn as shininess,Hn as sign,Jn as sin,Kn as sinc,Qn as skinning,$n as skinningReference,es as smoothstep,rs as smoothstepElement,ts as specularColor,as as specularF90,os as spherizeUV,is as split,ns as spritesheetUV,ss as sqrt,ls as stack,cs as step,ms as storage,ps as storageBarrier,ds as storageObject,us as storageTexture,gs as string,hs as struct,fs as sub,xs as subgroupIndex,bs as subgroupSize,ws as tan,vs as tangentGeometry,Ss as tangentLocal,Ts as tangentView,_s as tangentWorld,Vs as temp,ys as texture,Ds as texture3D,Ms as textureBarrier,Fs as textureBicubic,Cs as textureCubeUV,Is as textureLoad,Ns as textureSize,Ps as textureStore,Rs as thickness,Bs as threshold,Ls as time,ks as timerDelta,As as timerGlobal,Gs as timerLocal,Os as toOutputColorSpace,Ws as toWorkingColorSpace,js as toneMapping,Us as toneMappingExposure,zs as toonOutlinePass,qs as transformDirection,Es as transformNormal,Zs as transformNormalToView,Xs as transformedBentNormalView,Ys as transformedBitangentView,Hs as transformedBitangentWorld,Js as transformedClearcoatNormalView,Ks as transformedNormalView,Qs as transformedNormalWorld,$s as transformedTangentView,el as transformedTangentWorld,rl as transmission,tl as transpose,al as tri,ol as tri3,il as triNoise3D,nl as triplanarTexture,sl as triplanarTextures,ll as trunc,cl as tslFn,ml as uint,pl as uniform,dl as uniformArray,ul as uniformGroup,gl as uniforms,hl as userData,fl as uv,xl as uvec2,bl as uvec3,wl as uvec4,Sl as varying,Tl as varyingProperty,_l as vec2,Vl as vec3,yl as vec4,Dl as vectorComponents,Ml as velocity,Fl as vertexColor,Cl as vertexIndex,Il as vibrance,Nl as viewZToLogarithmicDepth,Pl as viewZToOrthographicDepth,Rl as viewZToPerspectiveDepth,Bl as viewport,Ll as viewportBottomLeft,kl as viewportCoordinate,Al as viewportDepthTexture,Gl as viewportLinearDepth,Ol as viewportMipTexture,Wl as viewportResolution,jl as viewportSafeUV,Ul as viewportSharedTexture,zl as viewportSize,ql as viewportTexture,El as viewportTopLeft,Zl as viewportUV,Xl as wgsl,Yl as wgslFn,Hl as workgroupArray,Jl as workgroupBarrier,Kl as workgroupId,Ql as workingToColorSpace,$l as xor};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
